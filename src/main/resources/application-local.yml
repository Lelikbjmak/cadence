spring:
  profiles.active: disableAuthorization
  mvc:
    locale: ru_RU
    locale-resolver: fixed
  jpa:
    hibernate:
      ddl-auto: update
  datasource:
    url: jdbc:postgresql://localhost:5432/osago
    username: postgres
    password: postgres
    driverClassName: org.postgresql.Driver
    testOnBorrow: true
    testWhileIdle: true
    validationQuery: select 1
  jpa.properties.hibernate.jdbc.lob.non_contextual_creation: true
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      auto-offset-reset: latest
      enable-auto-commit: true
      group-id: osago-group
      key-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        spring.json.key.default.type: java.lang.String
        spring.json.value.default.type: java.lang.String
        spring.deserializer.key.delegate.class: org.apache.kafka.common.serialization.StringDeserializer
        spring.deserializer.value.delegate.class: org.apache.kafka.common.serialization.StringDeserializer
        spring.json.trusted.packages: '*'
        spring.json.use.type.headers: false
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: com.cadence.app.kafka.serializers.CustomDateSerializer

cadence:
  service:
    host: localhost

app:
  name: Service OSAGO
  notifications:
    date-formatter: dd.MM.yyyy
    email:
      concludeContractEmailTemplateName: current OSAGO
    sms:
      concludeContractSmsTemplateName: ePolis_contract
      concludeAddendumSmsTemplateName: ePolis_addendum

  retry:
    max-attempts: 5
    delay: 1000
    max-delay: 30000
    multiplier: 1.3
  mdm.modelName: osago
  dateTimeFormat: yyyy-MM-dd'T'HH:mm:ssZ

  kafka:
    referenceUpdateGroup: osago-reference-update

logging:
  level:
    com.cadence.app: DEBUG

application:
  name: ms-osago
management:
  endpoint:
    metrics.enabled: true
    prometheus.enabled: true
  endpoints.web.exposure.include: '*'
  metrics.export.prometheus.enabled: true

server.port: 8080

kafka:
  topic:
    reset.permission.cache: reset_permission_cache
